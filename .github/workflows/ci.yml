# Name of the workflow. This is displayed in the GitHub Actions UI for easy
# identification among multiple workflows in the repository.
name: ci

# Defines the events that trigger this workflow to run automatically.
on:
  # Trigger the workflow on pull request events, such as opening, updating,
  # or synchronizing a PR.
  pull_request:
    # Specifically, only trigger when the target (base) branch of the PR is
    # 'main'. This ensures CI runs for changes proposed to the primary branch.
    branches: [main]

# Defines the jobs to run in this workflow. Jobs run in parallel by default.
jobs:
  # Job 1: Runs unit tests (existing).
  tests:
    # Display name for the job in the GitHub Actions UI.
    name: Tests
    # Runner type: Latest Ubuntu for a clean Linux environment.
    runs-on: ubuntu-latest

    steps:
      # Checkout the code.
      - name: Check out code
        uses: actions/checkout@v4

      # Set up Go.
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.0"

      # Run tests with coverage.
      - name: Run Unit Tests with Coverage
        run: go test -cover ./...

  # Job 2: Checks code formatting (new, runs in parallel with 'tests').
  style:
    # Display name for the formatting job.
    name: Style
    # Runner type: Same as tests for consistency.
    runs-on: ubuntu-latest

    steps:
      # Checkout the code (duplicated, as jobs are independent).
      - name: Check out code
        uses: actions/checkout@v4

      # Set up Go (duplicated, needed for go fmt).
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.0"

      # Check and fail if formatting issues (exits 1 if output non-empty).
      - name: Check Formatting
        run: test -z $(go fmt ./...)